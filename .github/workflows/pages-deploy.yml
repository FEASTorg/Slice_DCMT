name: Build & Deploy KiBot Docs to GitHub Pages

on:
  workflow_run:
    workflows: ["KiBot CI/CD"]
    types: [completed]

permissions:
  contents: read
  pages: write
  id-token: write

env:
  CONFIG_FILE: docs/site_config.yml

jobs:
  build-site:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install yq and pandoc
        run: |
          sudo apt-get update
          sudo apt-get install -y yq pandoc

      - name: Load project config
        id: cfg
        run: |
          echo "project_name=$(yq -r '.project_name' "$CONFIG_FILE")" >> "$GITHUB_OUTPUT"
          # newline-separated list
          yq -r '.artifacts[]' "$CONFIG_FILE" > artifacts.txt
          echo "artifacts<<EOF" >> "$GITHUB_OUTPUT"
          cat artifacts.txt >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"

      - name: Download KiBot artifacts from triggering run
        uses: actions/download-artifact@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          name: kibot-site
          path: _downloads
          repository: ${{ github.repository }}
          run-id: ${{ github.event.workflow_run.id }}

      - name: Collect selected outputs into docs/
        run: |
          mkdir -p docs
          printf '%s\n' "${{ steps.cfg.outputs.artifacts }}" | while IFS= read -r f; do
            [ -z "$f" ] && continue
            SRC=$(find _downloads -type f -name "$f" | head -n1 || true)
            if [ -n "$SRC" ]; then
              cp "$SRC" docs/
            else
              echo "Warning: $f not found in artifact"
            fi
          done
          # ensure static hosting (no Jekyll processing)
          touch docs/.nojekyll

      - name: Generate index.md
        run: |
          DATE=$(date '+%Y-%m-%d')
          PROJECT_NAME="${{ steps.cfg.outputs.project_name }}"
          {
            echo "# Docs & KiBot Outputs for $PROJECT_NAME"
            echo
            echo "The following files were generated from the latest PCB build:"
            echo
            printf '%s\n' "${{ steps.cfg.outputs.artifacts }}" | while IFS= read -r f; do
              [ -z "$f" ] && continue
              echo "- [$f](./$f)"
            done
            echo
            echo "_Last updated automatically on $DATE by GitHub Actions._"
          } > docs/index.md

      - name: Convert index.md â†’ index.html
        run: pandoc docs/index.md -f markdown -t html -s -o docs/index.html

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v4
        with:
          path: docs/

  deploy:
    needs: build-site
    runs-on: ubuntu-latest
    environment:
      name: github-pages
    steps:
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
