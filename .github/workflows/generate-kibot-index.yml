name: Generate KiBot index

on:
  workflow_call:
    inputs:
      kibot_run_id:
        description: "Run ID from KiBot CI to fetch artifacts"
        required: true
        type: string
    outputs:
      kibot_index_sha:
        description: "Commit SHA containing the latest KiBot index"
        value: ${{ jobs.generate-kibot-index.outputs.commit_sha }}

permissions:
  contents: write

concurrency:
  group: gen-kibot-index
  cancel-in-progress: true

jobs:
  generate-kibot-index:
    runs-on: ubuntu-latest
    outputs:
      commit_sha: ${{ steps.record-sha.outputs.commit_sha }}
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: true
          fetch-depth: 0

      - name: Sync to latest main
        run: |
          git fetch origin main
          git checkout -B main origin/main

      - uses: actions/setup-python@v4
        with: { python-version: "3.x" }

      - name: Install deps
        run: |
          pip install markdown2 pyyaml
          sudo apt-get update
          sudo apt-get install -y yq

      - name: Generate docs/kibot/index.md
        run: |
          python scripts/generate_kibot_index.py \
            --config docs/kibot/config.kibot.site.yml \
            --template docs/kibot/index_template.md \
            --out-md docs/kibot/index.md

      - name: Download KiBot artifact (for images to commit)
        uses: actions/download-artifact@v5
        with:
          name: kibot-site
          path: _kibot_art
          repository: ${{ github.repository }}
          run-id: ${{ inputs.kibot_run_id }}

      - name: Copy board images into repo (docs/assets/boards)
        id: copyimgs
        run: |
          set -e
          mkdir -p docs/assets/boards
          imgs=$(yq -r '.images[]' docs/kibot/config.kibot.site.yml || true)
          changed=0
          for f in $imgs; do
            src=$(find _kibot_art -type f -name "$f" | head -n1 || true)
            if [ -n "$src" ]; then
              dest="docs/assets/boards/$f"
              cp "$src" "$dest"
              if ! git diff --quiet -- "$dest"; then
                changed=1
              fi
            else
              echo "WARN: $f not found in artifact"
            fi
          done
          echo "changed=$changed" >> "$GITHUB_OUTPUT"

      - name: Commit & push (safe rebase)
        run: |
          set -e
          git config user.name "github-actions"
          git config user.email "github-actions@users.noreply.github.com"

          git add docs/kibot/index.md docs/assets/boards || true
          if git diff --cached --quiet; then
            echo "âœ… Nothing to commit."
            exit 0
          fi

          git commit -m "ðŸ“„ KiBot index + board renders (auto)"
          git fetch origin main
          git pull --rebase origin main
          git push origin HEAD:main

      - name: Record SHA
        id: record-sha
        run: echo "commit_sha=$(git rev-parse HEAD)" >> "$GITHUB_OUTPUT"
